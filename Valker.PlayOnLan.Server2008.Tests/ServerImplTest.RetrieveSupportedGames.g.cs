// <copyright file="ServerImplTest.RetrieveSupportedGames.g.cs" company="Kelman Ltd">Copyright © Kelman Ltd 2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework.Generated;
using Valker.PlayOnLan.Api.Communication;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Valker.PlayOnLan.Server
{
    public partial class ServerImplTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ServerImplTest))]
public void RetrieveSupportedGames60801()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      ServerImpl serverImpl;
      string[] ss;
      IMessageConnector[] iMessageConnectors = new IMessageConnector[1];
      serverImpl =
        new ServerImpl((IEnumerable<IMessageConnector>)iMessageConnectors);
      disposables.Add((IDisposable)serverImpl);
      ss = this.RetrieveSupportedGames(serverImpl);
      disposables.Dispose();
      Assert.IsNotNull((object)ss);
      Assert.AreEqual<int>(1, ss.Length);
      Assert.AreEqual<string>
          ("Tic-tac-toe,161DB3D0-94C3-44b7-AA60-ED0061706D74", ss[0]);
      Assert.IsNotNull((object)serverImpl);
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerImplTest))]
public void RetrieveSupportedGames608()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      ServerImpl serverImpl;
      string[] ss;
      IMessageConnector[] iMessageConnectors = new IMessageConnector[0];
      serverImpl =
        new ServerImpl((IEnumerable<IMessageConnector>)iMessageConnectors);
      disposables.Add((IDisposable)serverImpl);
      ss = this.RetrieveSupportedGames(serverImpl);
      disposables.Dispose();
      Assert.IsNotNull((object)ss);
      Assert.AreEqual<int>(1, ss.Length);
      Assert.AreEqual<string>
          ("Tic-tac-toe,161DB3D0-94C3-44b7-AA60-ED0061706D74", ss[0]);
      Assert.IsNotNull((object)serverImpl);
    }
}
    }
}
